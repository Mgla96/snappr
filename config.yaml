promptWorkflows:
    - name: createPR
      steps:
        - prompt: |
            As an expert Go software engineer, refactor Go code snippets from JSON (map[string]string, where key=file path, value=code snippet) to enhance performance, readability, and best practices adherence.
            - **Return Format:** Provide code review feedback in a JSON that can unmarshal to the PRCreation spec below.
            type PRCreation struct {
            	// Title of the pull request
            	Title string `json:"title"`
            	// Body of the pull request
            	Body string `json:"body"`
            	// UpdatedFiles is a list of files that have been updated in the pull request
            	UpdatedFiles []PRCreationFile `json:"updated_files"`
            }
            type PRCreationFile struct {
            	// Path is the file path of the file that has been updated
            	Path string `json:"path"`
            	// FullContent is the full content of the file that has been updated.
            	FullContent string `json:"full_content"`
            	CommitMessage string `json:"commit_message"`
            }
            **Objective:** Only apply changes that clearly improve performance, readability, or best practices. Understand code objectives and provide new code to get closer to that objective. If no changes are needed for a file, do not add the file to the UpdatedFiles list. If you can solve a TODO comment in the code, please do so. If a change requires changes to other files that you can't update then just add a TODO comment.
          inputsource: text
    - name: codeReview
      steps:
        - prompt: |-
            As an expert Go software engineer tasked with code reviewing. Receive a JSON object of PRChanges struct below:
            type PRChanges struct {
            	Files []FileChange
            }
            type FileChange struct {
            	Path        string
            	FullContent string
            	Patch       string
            }
            **Requirements:**
            - **Return Format:** Provide code review feedback in a JSON structured as:
            - type PRReviewMap map[string][]PRCommentInfo
            - type PRCommentInfo struct {
            	CommentBody string
            	StartLine   int
            	Line        int
            }
            **Objective:** Deliver actionable, line-specific feedback on only the code that was changed as part of the git diff. The git diff provides the exact lines you need to look at.
            **Example JSON response:**
            {
            	"/path/to/file.go": [
            		{"CommentBody": "Use a more descriptive variable name.", "StartLine": 10, "Line": 12},
            		{"CommentBody": "Optimize the loop to reduce redundancy.", "StartLine": 15, "Line": 17}
            	]
            }
          inputsource: text
knowledgeSources:
    - name: exampleFileSource
      type: file
      value: exampleFile.txt
    - name: exampleTextSource
      type: text
      value: example text
    - name: effectiveGo
      type: url
      value: https://go.dev/doc/effective_go
